from datetime import date, datetime
from typing import Dict, List, Type

from llm_server import util
from llm_server.models.base_model import Model


class MovieReview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, review: str = None, reviewer: str = None):
        """MovieReview - a model defined in OpenAPI

        :param review: The review of this MovieReview.
        :param reviewer: The reviewer of this MovieReview.
        """
        self.openapi_types = {"review": str, "reviewer": str}

        self.attribute_map = {"review": "review", "reviewer": "reviewer"}

        self._review = review
        self._reviewer = reviewer

    @classmethod
    def from_dict(cls, dikt: dict) -> "MovieReview":
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MovieReview of this MovieReview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def review(self):
        """Gets the review of this MovieReview.


        :return: The review of this MovieReview.
        :rtype: str
        """
        return self._review

    @review.setter
    def review(self, review):
        """Sets the review of this MovieReview.


        :param review: The review of this MovieReview.
        :type review: str
        """
        if review is None:
            raise ValueError("Invalid value for `review`, must not be `None`")

        self._review = review

    @property
    def reviewer(self):
        """Gets the reviewer of this MovieReview.


        :return: The reviewer of this MovieReview.
        :rtype: str
        """
        return self._reviewer

    @reviewer.setter
    def reviewer(self, reviewer):
        """Sets the reviewer of this MovieReview.


        :param reviewer: The reviewer of this MovieReview.
        :type reviewer: str
        """
        if reviewer is None:
            raise ValueError("Invalid value for `reviewer`, must not be `None`")

        self._reviewer = reviewer
